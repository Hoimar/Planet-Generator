[gd_resource type="ShaderMaterial" load_steps=9 format=3 uid="uid://5rm3b3klqa6f"]

[sub_resource type="VisualShaderNodeVectorOp" id="1"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeExpression" id="2"]
size = Vector2(250, 150)
expression = "output = 1.0 - pow(cos(3.142 * x / 2.0), 3.5);"

[sub_resource type="VisualShaderNodeColorParameter" id="3"]
parameter_name = "sun_color"

[sub_resource type="VisualShaderNodeInput" id="4"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDistance" id="5"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0)]

[sub_resource type="VisualShaderNodeFloatOp" id="6"]
output_port_for_preview = 0
default_input_values = [0, 1.0, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="7"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 4.7]
operator = 5

[sub_resource type="VisualShader" id="8"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 sun_color : source_color;



void fragment() {
// ColorParameter:15
	vec4 n_out15p0 = sun_color;


// Input:2
	vec2 n_out2p0 = UV;


// Distance:3
	vec3 n_in3p1 = vec3(0.50000, 0.50000, 0.00000);
	float n_out3p0 = distance(vec3(n_out2p0, 0.0), n_in3p1);


// FloatOp:7
	float n_in7p0 = 1.00000;
	float n_out7p0 = n_in7p0 - n_out3p0;


// FloatOp:8
	float n_in8p1 = 4.70000;
	float n_out8p0 = pow(n_out7p0, n_in8p1);


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		n_out14p0 = 1.0 - pow(cos(3.142 * n_out8p0 / 2.0), 3.5);
	}


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out15p0.xyz) * vec3(n_out14p0);


// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out14p0;


}
"
graph_offset = Vector2(-61, 7.25)
flags/unshaded = true
nodes/fragment/0/position = Vector2(780, 340)
nodes/fragment/2/node = SubResource("4")
nodes/fragment/2/position = Vector2(-660, 320)
nodes/fragment/3/node = SubResource("5")
nodes/fragment/3/position = Vector2(-500, 320)
nodes/fragment/7/node = SubResource("6")
nodes/fragment/7/position = Vector2(-320, 320)
nodes/fragment/8/node = SubResource("7")
nodes/fragment/8/position = Vector2(-140, 320)
nodes/fragment/10/node = SubResource("1")
nodes/fragment/10/position = Vector2(580, 160)
nodes/fragment/14/node = SubResource("2")
nodes/fragment/14/position = Vector2(40, 320)
nodes/fragment/14/size = Vector2(250, 150)
nodes/fragment/14/input_ports = "0,0,x;"
nodes/fragment/14/output_ports = "0,0,output;"
nodes/fragment/14/expression = "output = 1.0 - pow(cos(3.142 * x / 2.0), 3.5);"
nodes/fragment/15/node = SubResource("3")
nodes/fragment/15/position = Vector2(340, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 7, 1, 7, 0, 8, 0, 10, 0, 0, 0, 14, 0, 10, 1, 8, 0, 14, 0, 14, 0, 0, 1, 15, 0, 10, 0)

[resource]
render_priority = 0
shader = SubResource("8")
shader_parameter/sun_color = Color(1, 1, 0.94902, 1)
